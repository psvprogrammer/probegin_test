# Generated by Django 2.0.3 on 2018-03-12 13:24

from django.db import migrations


TEST_USERNAME = '_test_user_'
TEST_BLOG_CATEGORY_NAME = 'test category name'


def add_test_data(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    BlogCategory = apps.get_model('probegin_test', 'BlogCategory')
    Blog = apps.get_model('probegin_test', 'Blog')
    Post = apps.get_model('probegin_test', 'Post')
    Comment = apps.get_model('probegin_test', 'Comment')

    user = User(username=TEST_USERNAME)
    user.save()
    blog_category = BlogCategory(name=TEST_BLOG_CATEGORY_NAME)
    blog_category.save()
    blog = Blog(author=user, title='test blog')
    blog.save()
    blog.categories.add(blog_category)
    blog.save()
    post = Post(author=user, blog=blog, title='test post', content='test content')
    post.save()
    comment1 = Comment(author=user, post=post, content='test comment 1')
    comment1.save()
    comment2 = Comment(author=user, post=post, content='test comment 2')
    comment2.save()


def rollback_test_data(apps, schema_editor):
    """To rollback all test data - all we need is just to delete test user
    we've created. All related data will be removed due to CASCADE model.
    Plus blog_category we need to delete separately"""
    User = apps.get_model('auth', 'User')
    BlogCategory = apps.get_model('probegin_test', 'BlogCategory')

    user = User.objects.filter(username=TEST_USERNAME).first()
    if user is not None:
        user.delete()

    blog_category = BlogCategory.objects.filter(
        name=TEST_BLOG_CATEGORY_NAME).first()
    if blog_category is not None:
        blog_category.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('probegin_test', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_test_data, reverse_code=rollback_test_data),
    ]
